{"version":3,"file":"static/js/597.099d9a34.chunk.js","mappings":"yNAqCA,UAhCa,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAiBpB,OAfAI,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQC,MAAM,sCAADC,OAAuCpB,EAAE,sDAAqD,KAAD,EAA3G,OAARc,EAAQE,EAAAK,KAAAL,EAAAE,KAAA,EACKJ,EAASQ,OAAO,KAAD,EAA5BhB,EAAIU,EAAAK,KACVd,EAAQD,GAAKU,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEbQ,QAAQC,IAAIT,EAAAO,GAAMG,SAAS,yBAAAV,EAAAW,OAAA,GAAAd,EAAA,mBAE9B,kBARe,OAAAH,EAAAkB,MAAA,KAAAC,UAAA,KAShBL,QAAQC,IAAInB,GACZG,GACF,GAAG,CAACT,EAAIM,KAEAwB,EAAAA,EAAAA,KAAA,OAAAC,UACND,EAAAA,EAAAA,KAAA,MAAAC,SACGzB,GAAQA,EAAKA,KAAK0B,KAAI,SAACC,GAAK,OAC3BC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,OAAKK,IAAKF,EAAMG,aAAY,kCAAAhB,OAAqCa,EAAMG,aAAY,6CAA8CC,EAAKC,IAAI,aAAaC,MAAM,MAAMC,OAAO,SAC1KN,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAIE,EAAMQ,KAAK,QACfP,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,eAAaE,EAAMS,eAHfT,EAAMjC,GAG4B,OAKnD,C,uGCnCA,SAAS2C,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASrC,EAAkB8C,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAO/B,UACX,OAAO,IAAI0B,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAG7B,MAAM8B,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOa,GACdlB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASa,EACnE,CAEAd,OAAMe,EACR,GACF,CACF,C","sources":["components/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport img from \"../movie.jpg\"\r\n\r\nconst Cast = () => {\r\n  const { id } = useParams();\r\n  const [cast, setCast] = useState('')\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchMovie = async () => {\r\n      try {\r\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=99cb9f567734a9ee5f2d74055523eb10`);\r\n        const cast = await response.json();\r\n        setCast(cast)\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    }\r\n    console.log(cast);\r\n    fetchMovie();\r\n  }, [id, cast])\r\n\r\n  return (<div>\r\n    <ul>\r\n      {cast && cast.cast.map((actor) => (\r\n        <li key={actor.id}>\r\n          <img src={actor.profile_path ? `https://image.tmdb.org/t/p/w500${actor.profile_path}?api_key=99cb9f567734a9ee5f2d74055523eb10` : img} alt=\"actorimage\" width='150' height='220' />\r\n          <p>{actor.name} </p>\r\n          <p> Character: {actor.character}</p></li>\r\n      ))}\r\n    </ul>\r\n\r\n  </div>);\r\n};\r\n\r\nexport default Cast;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["id","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_cast","_context","prev","next","fetch","concat","sent","json","t0","console","log","message","stop","apply","arguments","_jsx","children","map","actor","_jsxs","src","profile_path","img","alt","width","height","name","character","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}